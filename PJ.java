/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Diah AR
 */


import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Statement;
import java.util.LinkedList;
import javax.swing.JOptionPane;





public class PJ extends javax.swing.JFrame {
    private LinkedList<String[]> dataListPJ = new LinkedList<>();
    private PJLogic pjlogic = new PJLogic(); 


    /**
     * Creates new form try3
     */
    
     private void kosong(){
        txtIDPJ.setText(null);
        txtnamaPJ.setText(null);
        txtNOHP.setText(null);
        txtJenisKelamin.setText(null);
        txtalamat.setText(null);
    }
    
     
    private void tampilkan(){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No.");
        model.addColumn("ID PJ");
        model.addColumn("Nama PJ");
        model.addColumn("No. HP");
        model.addColumn("Jenis Kelamin");
        model.addColumn("Alamat");

    // Menampilkan data dari linked list
        for (int i = 0; i < dataListPJ.size(); i++) {
            String[] rowData = dataListPJ.get(i);
            model.addRow(new Object[]{i + 1, rowData[0], rowData[1], rowData[2], rowData[3], rowData[4]});
        }

        try {
            int no = model.getRowCount() + 1; // Mulai penomoran dari baris selanjutnya
            String sql = "SELECT * FROM penanggungjawab";
            java.sql.Connection conn = (Connection) Konfig.configDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);

            while (res.next()) {
                model.addRow(new Object[]{no++, res.getString(1), res.getString(2), res.getString(3), res.getString(4), res.getString(5)});
            }
            jTable1.setModel(model);
        } catch (SQLException ex) {
            System.out.println("Error:" + ex.getMessage());
        }

    }
    
    
    public PJ() {
        initComponents();
        this.setLocationRelativeTo(null);
        tampilkan();
        kosong();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtIDPJ = new javax.swing.JTextField();
        txtnamaPJ = new javax.swing.JTextField();
        txtNOHP = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        btnedit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnhapus = new javax.swing.JButton();
        btncari = new javax.swing.JButton();
        btnexit = new javax.swing.JButton();
        txtcari = new javax.swing.JTextField();
        txtJenisKelamin = new javax.swing.JTextField();
        txtalamat = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        txtIDPJ.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        txtIDPJ.setBorder(null);
        txtIDPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDPJActionPerformed(evt);
            }
        });
        jPanel1.add(txtIDPJ);
        txtIDPJ.setBounds(250, 470, 230, 50);

        txtnamaPJ.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        txtnamaPJ.setBorder(null);
        txtnamaPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnamaPJActionPerformed(evt);
            }
        });
        jPanel1.add(txtnamaPJ);
        txtnamaPJ.setBounds(580, 470, 230, 50);

        txtNOHP.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        txtNOHP.setBorder(null);
        txtNOHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNOHPActionPerformed(evt);
            }
        });
        jPanel1.add(txtNOHP);
        txtNOHP.setBounds(250, 620, 230, 50);

        btnInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/png/Tambah pj (1).png"))); // NOI18N
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        jPanel1.add(btnInsert);
        btnInsert.setBounds(440, 980, 180, 40);

        btnedit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/png/edit (1).png"))); // NOI18N
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });
        jPanel1.add(btnedit);
        btnedit.setBounds(1250, 330, 150, 40);

        jTable1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "No.", "ID PJ", "Nama PJ", "Jenis Kelamin", "No. HP", "Alamat"
            }
        ));
        jTable1.setSurrendersFocusOnKeystroke(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(1000, 460, 810, 550);

        btnhapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/png/hapuss.png"))); // NOI18N
        btnhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapusActionPerformed(evt);
            }
        });
        jPanel1.add(btnhapus);
        btnhapus.setBounds(990, 320, 150, 50);

        btncari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/png/Find (1).png"))); // NOI18N
        btncari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncariActionPerformed(evt);
            }
        });
        jPanel1.add(btncari);
        btncari.setBounds(1530, 200, 140, 50);

        btnexit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/png/edit (2).png"))); // NOI18N
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });
        jPanel1.add(btnexit);
        btnexit.setBounds(1520, 330, 140, 40);

        txtcari.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        txtcari.setBorder(null);
        jPanel1.add(txtcari);
        txtcari.setBounds(1100, 210, 310, 40);

        txtJenisKelamin.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        txtJenisKelamin.setBorder(null);
        txtJenisKelamin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJenisKelaminActionPerformed(evt);
            }
        });
        jPanel1.add(txtJenisKelamin);
        txtJenisKelamin.setBounds(580, 620, 230, 50);

        txtalamat.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        txtalamat.setBorder(null);
        txtalamat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtalamatActionPerformed(evt);
            }
        });
        jPanel1.add(txtalamat);
        txtalamat.setBounds(417, 792, 230, 50);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/png/PJ New (1).png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1910, 1080);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1904, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1077, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtnamaPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnamaPJActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnamaPJActionPerformed

    private void btnhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapusActionPerformed
        // TODO add your handling code here:
        try {
        
        String namaPJ = txtnamaPJ.getText();

        // Check if the item name is not empty
        if (!namaPJ.isEmpty()) {
            // linked list
            for (String[] rowData : dataListPJ) {
                if (rowData[1].equals(namaPJ)) {
                    dataListPJ.remove(rowData);
                    break;
                }
            }

            // table model
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            for (int i = 0; i < model.getRowCount(); i++) {
                if (model.getValueAt(i, 2).equals(namaPJ)) {
                    model.removeRow(i);
                    break;
                }
            }

            // database
            String sql = "DELETE FROM penanggungjawab WHERE `nama_pj`=?";
            try (Connection conn = Konfig.configDB();
                 PreparedStatement pstm = conn.prepareStatement(sql)) {
                pstm.setString(1, namaPJ);
                pstm.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus!");
            }

            kosong();
        }
    } catch (HeadlessException | SQLException e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
    }
    }//GEN-LAST:event_btnhapusActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        try {
        String sql = "INSERT INTO penanggungjawab (id_pj, nama_pj, jenis_kelamin, no_hp, alamat) VALUES (?, ?, ?, ?, ?)";
        java.sql.Connection conn = (Connection) Konfig.configDB();
        java.sql.PreparedStatement pstm = conn.prepareStatement(sql);

     
        pstm.setString(1, txtIDPJ.getText());
        pstm.setString(2, txtnamaPJ.getText());
        pstm.setString(3, txtNOHP.getText());
        pstm.setString(4, txtJenisKelamin.getText());
        pstm.setString(5, txtalamat.getText());

        pstm.execute();
        JOptionPane.showMessageDialog(null, "Tambah data berhasil");

        // Menambah data ke linked list
        String[] rowData = {txtIDPJ.getText(), txtnamaPJ.getText(), txtNOHP.getText(), txtJenisKelamin.getText(), txtalamat.getText()};
        dataListPJ.add(rowData);

        tampilkan();
        kosong();
    } catch (HeadlessException | SQLException e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
    }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int baris = jTable1.rowAtPoint(evt.getPoint());
        
    if (baris >= 0 && baris < jTable1.getRowCount()) {
        String id_pj = jTable1.getValueAt(baris, 1).toString(); // Mengambil data dari kolom ID PJ
        txtIDPJ.setText(id_pj);

        String nama_pj = jTable1.getValueAt(baris, 2).toString(); // Mengambil data dari kolom Nama PJ
        txtnamaPJ.setText(nama_pj);

        String no_hp = jTable1.getValueAt(baris, 3).toString(); // Mengambil data dari kolom No HP
        txtNOHP.setText(no_hp);

        String jenis_kelamin = jTable1.getValueAt(baris, 4).toString(); // Mengambil data dari kolom Jenis Kelamin
        txtJenisKelamin.setText(jenis_kelamin);

        String alamat = jTable1.getValueAt(baris, 5).toString(); // Mengambil data dari kolom Alamat
        txtalamat.setText(alamat);
    }


    }//GEN-LAST:event_jTable1MouseClicked

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        // TODO add your handling code here:
       try {
        // Ambil ID PJ dari baris yang dipilih di tabel
        int baris = jTable1.getSelectedRow();
        if (baris == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris terlebih dahulu");
            return;
        }
        
        // Ambil ID PJ dari kolom ke-1 (kolom kedua) di tabel
        String id_pj = jTable1.getValueAt(baris, 1).toString();

        String sql = "UPDATE penanggungjawab SET nama_pj = ?, jenis_kelamin = ?, no_hp = ?, alamat = ? WHERE id_pj = ?";
        java.sql.Connection conn = (Connection) Konfig.configDB();
        java.sql.PreparedStatement pstm = conn.prepareStatement(sql);

        // Set the values using PreparedStatement parameters to prevent SQL injection
        pstm.setString(1, txtnamaPJ.getText());
        pstm.setString(2, txtNOHP.getText());
        pstm.setString(3, txtJenisKelamin.getText());
        pstm.setString(4, txtalamat.getText());
        pstm.setString(5, id_pj); // Gunakan ID PJ yang telah diambil dari tabel

        pstm.executeUpdate();
        JOptionPane.showMessageDialog(null, "Edit data berhasil");
        tampilkan();
        kosong();
    } catch (HeadlessException | SQLException e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
    }
    }//GEN-LAST:event_btneditActionPerformed

    private void txtNOHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNOHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNOHPActionPerformed

    private void btncariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncariActionPerformed
        // TODO add your handling code here:
        String ID_PJ = txtcari.getText();

    // Gunakan metode pencarian pada pohon biner
    try {
        // Query SQL untuk mencari data barang berdasarkan nama_barang
        String sql = "SELECT * FROM penanggungjawab WHERE id_pj LIKE ?";
        java.sql.Connection conn = (Connection) Konfig.configDB();
        java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
        
        // Set parameter query dengan nilai nama_barang yang diambil dari JTextField
        pstm.setString(1, "%" + ID_PJ + "%");

        // Eksekusi query
        java.sql.ResultSet res = pstm.executeQuery();

        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No.");
        model.addColumn("ID PJ");
        model.addColumn("Nama PJ");
        model.addColumn("No. HP");
        model.addColumn("Jenis Kelamin");
        model.addColumn("Alamat");

        int no = 1;
        // Tampilkan hasil pencarian di dalam tabel
        while (res.next()) {
           model.addRow(new Object[]{no++, res.getString(1), res.getString(2), res.getString(3), res.getString(4), res.getString(5)});
        }
        jTable1.setModel(model);

        if (model.getRowCount() > 0) {
            JOptionPane.showMessageDialog(this, "Data ditemukan untuk ID Penanggung Jawab: " + ID_PJ);

        } else {
            JOptionPane.showMessageDialog(this, "Data tidak ditemukan untuk ID Penanggung Jawab: " + ID_PJ);
        }
    } catch (HeadlessException | SQLException e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
        
    }
    
    }//GEN-LAST:event_btncariActionPerformed

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new Menu().setVisible(true);
    }//GEN-LAST:event_btnexitActionPerformed

    private void txtJenisKelaminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJenisKelaminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJenisKelaminActionPerformed

    private void txtalamatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtalamatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtalamatActionPerformed

    private void txtIDPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDPJActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDPJActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PJ().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btncari;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnhapus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtIDPJ;
    private javax.swing.JTextField txtJenisKelamin;
    private javax.swing.JTextField txtNOHP;
    private javax.swing.JTextField txtalamat;
    private javax.swing.JTextField txtcari;
    private javax.swing.JTextField txtnamaPJ;
    // End of variables declaration//GEN-END:variables
}
