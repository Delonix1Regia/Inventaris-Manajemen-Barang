/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Diah AR
 */


import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Statement;
import java.util.LinkedList;
import javax.swing.JOptionPane;





public class Barang extends javax.swing.JFrame {
    private LinkedList<String[]> dataListBarang = new LinkedList<>(); 
    private BarangLogic barangLogic = new BarangLogic(); 


    /**
     * Creates new form try3
     */
    
     private void kosong(){
        txtIDbrg.setText(null);
        txtnamabrg.setText(null);
        txtstok.setText(null);
    }
    
    private void tampilkan(){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No.");
        model.addColumn("ID Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Stok");

        // Menampilkan data dari linked list
        for (int i = 0; i < dataListBarang.size(); i++) {
            String[] rowData = dataListBarang.get(i);
            model.addRow(new Object[]{i + 1, rowData[0], rowData[1], rowData[2]});
        }

        try {
            int no = model.getRowCount() + 1;
            String sql = "SELECT * FROM barang";
            java.sql.Connection conn = (Connection) Konfig.configDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);

            while (res.next()) {
                model.addRow(new Object[]{no++, res.getString(1), res.getString(2), res.getString(3)});
            }
            jTable1.setModel(model);

        } catch (SQLException ex) {
            System.out.println("Error:" + ex.getMessage());
        }
    }
    
    
    public Barang() {
        initComponents();
        this.setLocationRelativeTo(null);
        tampilkan();
        kosong();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtIDbrg = new javax.swing.JTextField();
        txtnamabrg = new javax.swing.JTextField();
        txtstok = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnhapus = new javax.swing.JButton();
        btncari = new javax.swing.JButton();
        btnexit = new javax.swing.JButton();
        txtcari = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        txtIDbrg.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        txtIDbrg.setBorder(null);
        jPanel1.add(txtIDbrg);
        txtIDbrg.setBounds(230, 260, 270, 60);

        txtnamabrg.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        txtnamabrg.setBorder(null);
        txtnamabrg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnamabrgActionPerformed(evt);
            }
        });
        jPanel1.add(txtnamabrg);
        txtnamabrg.setBounds(670, 260, 260, 60);

        txtstok.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        txtstok.setBorder(null);
        txtstok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtstokActionPerformed(evt);
            }
        });
        jPanel1.add(txtstok);
        txtstok.setBounds(470, 420, 260, 60);

        btnInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/png/Tambah.png"))); // NOI18N
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        jPanel1.add(btnInsert);
        btnInsert.setBounds(1160, 450, 160, 40);

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/png/Edit.png"))); // NOI18N
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jPanel1.add(btnEdit);
        btnEdit.setBounds(1400, 450, 160, 40);

        jTable1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No.", "ID Barang", "Nama Barang", "Stok"
            }
        ));
        jTable1.setSurrendersFocusOnKeystroke(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(230, 640, 1330, 360);

        btnhapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/png/Hapus.png"))); // NOI18N
        btnhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapusActionPerformed(evt);
            }
        });
        jPanel1.add(btnhapus);
        btnhapus.setBounds(1640, 440, 160, 50);

        btncari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/png/Find (1).png"))); // NOI18N
        btncari.setText("jButton1");
        btncari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncariActionPerformed(evt);
            }
        });
        jPanel1.add(btncari);
        btncari.setBounds(1660, 300, 140, 40);

        btnexit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/png/Menu (3).png"))); // NOI18N
        btnexit.setText("jButton1");
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });
        jPanel1.add(btnexit);
        btnexit.setBounds(1670, 990, 130, 40);

        txtcari.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        txtcari.setBorder(null);
        jPanel1.add(txtcari);
        txtcari.setBounds(1260, 300, 310, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/png/Barang new.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1910, 1080);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1904, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1077, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtnamabrgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnamabrgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnamabrgActionPerformed

    private void btnhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapusActionPerformed
        // TODO add your handling code here:
        try {
        
        String namaBarang = txtnamabrg.getText();

        
        if (!namaBarang.isEmpty()) {
            // hapus item dari linked list
            for (String[] rowData : dataListBarang) {
                if (rowData[1].equals(namaBarang)) {
                    dataListBarang.remove(rowData);
                    break;
                }
            }

            // hapus item dari table model
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            for (int i = 0; i < model.getRowCount(); i++) {
                if (model.getValueAt(i, 2).equals(namaBarang)) {
                    model.removeRow(i);
                    break;
                }
            }

            // hapus item dari database
            String sql = "DELETE FROM barang WHERE `nama_barang`=?";
            try (Connection conn = Konfig.configDB();
                 PreparedStatement pstm = conn.prepareStatement(sql)) {
                pstm.setString(1, namaBarang);
                pstm.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus!");
            }

            kosong();
        }
    } catch (HeadlessException | SQLException e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
    }
    }//GEN-LAST:event_btnhapusActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        try {
            String sql = "INSERT INTO barang VALUES (?, ?, ?)";
            java.sql.Connection conn = (Connection) Konfig.configDB();
            java.sql.PreparedStatement pstm = conn.prepareStatement(sql);

            
            pstm.setString(1, txtIDbrg.getText());
            pstm.setString(2, txtnamabrg.getText());
            pstm.setString(3, txtstok.getText());

            pstm.execute();
            JOptionPane.showMessageDialog(null, "Tambah data berhasil");

            // Menambah data ke linked list
            String[] rowData = {txtIDbrg.getText(), txtnamabrg.getText(), txtstok.getText()};
            dataListBarang.add(rowData);

            tampilkan();
            kosong();
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int baris = jTable1.rowAtPoint(evt.getPoint());
        
        //if (baris >= 0 && baris < jTable1.getRowCount()) {
        String id_barang = jTable1.getValueAt(baris, 1).toString();
        txtIDbrg.setText(id_barang);

        String nama_barang = jTable1.getValueAt(baris, 2).toString();
        txtnamabrg.setText(nama_barang);

        String stok = jTable1.getValueAt(baris, 3).toString();
        txtstok.setText(stok);

    }//GEN-LAST:event_jTable1MouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        try{
            String sql = "UPDATE barang SET nama_barang = ?, stok = ? WHERE id_barang = ?";
        java.sql.Connection conn = (Connection) Konfig.configDB();
        java.sql.PreparedStatement pstm = conn.prepareStatement(sql);

        // Set the values using PreparedStatement parameters to prevent SQL injection
        pstm.setString(1, txtnamabrg.getText());
        pstm.setString(2, txtstok.getText());
        pstm.setString(3, txtIDbrg.getText());

            pstm.execute();
            JOptionPane.showMessageDialog(null, "Edit data berhasil");
        tampilkan();
        kosong();
        }catch (HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void txtstokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtstokActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtstokActionPerformed

    private void btncariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncariActionPerformed
        // TODO add your handling code here:
        String nama_barang = txtcari.getText();

    
    try {
        // Query SQL untuk mencari data barang berdasarkan nama_barang
        String sql = "SELECT * FROM barang WHERE nama_barang LIKE ?";
        java.sql.Connection conn = (Connection) Konfig.configDB();
        java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
        
        // Set parameter query dengan nilai nama_barang yang diambil dari JTextField
        pstm.setString(1, "%" + nama_barang + "%");

        // Eksekusi query
        java.sql.ResultSet res = pstm.executeQuery();

        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No.");
        model.addColumn("ID Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Stok");

        int no = 1;
        // Tampilkan hasil pencarian di dalam tabel
        while (res.next()) {
            model.addRow(new Object[]{no++, res.getString(1), res.getString(2), res.getString(3)});
        }
        jTable1.setModel(model);

        if (model.getRowCount() > 0) {
            JOptionPane.showMessageDialog(this, "Data ditemukan untuk Nama Barang: " + nama_barang);

        } else {
            JOptionPane.showMessageDialog(this, "Data tidak ditemukan untuk Nama Barang: " + nama_barang);
        }
    } catch (HeadlessException | SQLException e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
        
    }
    
    }//GEN-LAST:event_btncariActionPerformed

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new Menu().setVisible(true);
    }//GEN-LAST:event_btnexitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Barang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btncari;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnhapus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtIDbrg;
    private javax.swing.JTextField txtcari;
    private javax.swing.JTextField txtnamabrg;
    private javax.swing.JTextField txtstok;
    // End of variables declaration//GEN-END:variables
}
